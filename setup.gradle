task setup() {
    // Description
    description = 'Setup Advisor and download all necessary files.'
    group       = 'advisor'

    println "# Start setup of Advisor."

    // Create advisor path
    def path = new File("${project.rootDir}/advisor/rules")
    if (!path.exists()) { path.mkdirs() }

    // Download config file
    def file = new File("${project.rootDir}/advisor/advisorConfig.gradle")
    if (!file.exists()) {
        println "# - Start downloading of Advisor Configuration file."
        new URL(endpoint + '/advisorConfig.gradle').withInputStream{ i -> file.withOutputStream{ it << i }}
        println "# - Finished downloading of Advisor Configuration file."
    }

    // Download Checkstyle rules
    file = new File("${project.rootDir}/advisor/rules/checkstyle-rules.xml")
    if (!file.exists()) {
        println "# - Start downloading of Checkstyle rules."
        new URL(endpoint + '/checkstyle/checkstyle-rules.xml').withInputStream{ i -> file.withOutputStream{ it << i }}
        println "# - Finished downloading of Checkstyle rules."
    }

    // Download FindBugs rules
    file = new File("${project.rootDir}/advisor/rules/findbugs-rules.xml")
    if (!file.exists()) {
        println "# - Start downloading of Findbugs rules."
        new URL(endpoint + '/findbugs/findbugs-rules.xml').withInputStream{ i -> file.withOutputStream{ it << i }}
        println "# - Finished downloading of Findbugs rules."
    }

    // Download Lint rules
    file = new File("${project.rootDir}/advisor/rules/lint-rules.xml")
    if (!file.exists()) {
        println "# - Start downloading of Lint rules."
        new URL(endpoint + '/lint/lint-rules.xml').withInputStream{ i -> file.withOutputStream{ it << i }}
        println "# - Finished downloading of Lint rules."
    }

    println "# Finished setup of Advisor."
}
